# Fetch ssh host key(s) and store into the local known_hosts file.
# Note that this makes heavy use of `inventory_hostname` rather than
# `ansible_hostname` since the latter requires facts to have been gathered,
# which likely hasn't happened at this point.
#  => implies LARGE assumption that your hostnames and inventory names match.
---
# special var 'ansible_connection' is not saved under 'delegate_to'
- name: Save connection method
  set_fact:
    bootstrap_ansible_connection: "{{ ansible_connection }}"

# See defaults/main.yml and README.md for important details
- name: Allow blind cache updating
  set_fact:
    bootstrap_ssh_key_cache_blindly: true
  # NOTE: using direct check of run tags, which is slighlty unusual.
  # Allows other tags to be applied on import of this file.
  when:
    - ('cache_blindly' in ansible_run_tags)

- block:

  - name: Check for cached SSH host key
    lineinfile:
      path: "{{ bootstrap_ssh_key_hosts_file | d(bootstrap_ssh_key_hosts_file_default) }}"
      regexp: '^{{ inventory_hostname }}(,[0-9.]+)? .*'  # note embedded space
      state: absent
    check_mode: yes
    changed_when: false
    register: bootstrap_ssh_host_key_cached
    when:
      - not bootstrap_ssh_key_cache_blindly

  - name: Collect host IP addresses
    set_fact:
      bootstrap_host_ipv4s: "{{ lookup('dig', inventory_hostname, 'qtype=A', wantlist=True)
                                | select('match', '[0-9.]+')
                                | list }}"
    when:
      - bootstrap_ssh_key_cache_ipv4

  - name: Fetch SSH host key
    set_fact:
      bootstrap_ssh_host_key: "{{ lookup('pipe',
                                         'ssh-keyscan'
                                            + ' -t ' + bootstrap_ssh_key_type
                                            + ' -p ' + (hostvars[inventory_hostname]['ansible_ssh_port'] | default('22'))
                                            + ' ' + ( [ inventory_hostname ] + ( bootstrap_host_ipv4s | d([]) ) ) | join(',')
                                            + ' 2>/dev/null') }}"
    when:
      - not ( bootstrap_ssh_host_key_cached['found'] | d(false) )
    failed_when:
      - (bootstrap_ssh_host_key | d("")) == ""

  - debug:
      # msg="{{ lookup('dig', 'cloudflare.com', 'qtype=A') }}"
      # var: inventory_hostname
  - name: Update SSH host key cache
    run_once: true
    known_hosts:
      path: "{{ bootstrap_ssh_key_hosts_file | d(omit) }}"
      host: "{{ item }}"
      key: "{{ hostvars[item]['bootstrap_ssh_host_key'] | d(omit) }}"
      state: present
      hash_host: "{{ bootstrap_ssh_key_hash_hostname }}"
    with_items: "{{ ansible_play_batch }}"
    when:
      - hostvars[item]['bootstrap_ssh_host_key'] is defined

  # BLOCK OPTIONS
  delegate_to: localhost
  become: false
  when:
    - bootstrap_ansible_connection in [ 'ssh', 'paramiko' ]
  # BLOCK END
